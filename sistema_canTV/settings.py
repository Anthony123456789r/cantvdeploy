"""
Django settings for sistema_canTV project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
import dj_database_url # Importar para el análisis robusto de la URL de la base de datos

# Construye rutas dentro del proyecto así: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Configuración General ---
# ¡ADVERTENCIA DE SEGURIDAD: mantén la clave secreta utilizada en producción en secreto!
# Usa una variable de entorno para la clave secreta en producción
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-i&tbyp58m=g!__x5a*eiori9dkw-3hm2-vk2_$carukl4xbbhj') # Valor de respaldo para desarrollo local

# ¡ADVERTENCIA DE SEGURIDAD: no ejecutes con debug activado en producción!
# DEBUG debe ser False en producción
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True' 

# Hosts permitidos para producción
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '.vercel.app,localhost,127.0.0.1').split(',')
# Nota: Render añade automáticamente la URL de tu servicio a ALLOWED_HOSTS

# Definición de la aplicación
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cantv_sistema',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Añadir WhiteNoise para servir archivos estáticos
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cantv_sistema.middleware.AuthRequiredMiddleware',
]

ROOT_URLCONF = 'sistema_canTV.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sistema_canTV.wsgi.app'

# --- Configuración de la Base de Datos ---
# Usa dj_database_url para analizar la variable de entorno DATABASE_URL de Render
DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL', 'postgres://er_owner:npg_14YxtGgfcdwq@ep-dark-hat-a8rraoyr-pooler.eastus2.azure.neon.tech/er'),
        conn_max_age=600, # Opcional: controla cuánto tiempo se almacenan en caché las conexiones
        ssl_require=True # Asegura que SSL sea requerido para producción
    )
}

# --- Validación de Contraseñas ---
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# --- Internacionalización ---
LANGUAGE_CODE = 'es-latam'
TIME_ZONE = 'America/Caracas'
USE_I18N = True
USE_TZ = True

# --- Archivos Estáticos y de Medios ---
# Recoge los archivos estáticos en un solo directorio para producción
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATIC_URL = '/static/' # Cambiado por consistencia, será servido por WhiteNoise

# Directorios adicionales donde Django debe buscar archivos estáticos
STATICFILES_DIRS = [
    BASE_DIR / 'cantv_sistema' / 'static',
]

# Configura WhiteNoise para comprimir y cachear archivos estáticos
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

# Tipo de campo de clave primaria por defecto
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LANGUAGES = [
    ('en', 'English'),
    ('es', 'Español'),
    ('es-latam', 'Español (Latinoamérica)'),
]